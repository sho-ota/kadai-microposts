{"changed":true,"filter":false,"title":"aaa.txt","tooltip":"/memo/aaa.txt","value":"<?php\n// クラス定義\nclass Sample {\n    // インスタンスが持つ変数（値）\n    public $value1 = '';\n    public $value2 = 123;\n    public $value3 = true;\n    \n    // インスタンスを初期化するための、特別な関数\n    function __construct($value1) {\n        $this->value1 = $value1;\n    }\n    \n    // インスタンスが持つ関数（処理）\n    function test($name) {\n        print $this->value1 . '、' . $name . 'さん！' . PHP_EOL;\n    }\n}\n\n// インスタンスの生成と、変数への代入\n$sample1 = new Sample('こんにちは');\n\n// インスタンスの使用\n$sample1->test('太郎');","undoManager":{"mark":3,"position":5,"stack":[[{"start":{"row":1,"column":4},"end":{"row":1,"column":20},"action":"remove","lines":["$ cd environment"],"id":28},{"start":{"row":1,"column":4},"end":{"row":1,"column":26},"action":"insert","lines":[" $ cd ~/environment   "]}],[{"start":{"row":1,"column":25},"end":{"row":1,"column":26},"action":"remove","lines":[" "],"id":29},{"start":{"row":1,"column":24},"end":{"row":1,"column":25},"action":"remove","lines":[" "]},{"start":{"row":1,"column":23},"end":{"row":1,"column":24},"action":"remove","lines":[" "]}],[{"start":{"row":1,"column":4},"end":{"row":1,"column":5},"action":"remove","lines":[" "],"id":30}],[{"start":{"row":0,"column":0},"end":{"row":13,"column":19},"action":"remove","lines":["1. ~/environment ディレクトリの直下に移動する","    $ cd ~/environment","","2. ~/environment ディレクトリの直下で kadai-terminal ディレクトリを作成する","    $ mkdir kadai-terminal","","3.  先ほど作成した kadai-terminal へ現在のディレクトリを移動する","    $ cd kadai-terminal","","4.  kadai-terminal の直下で memo.txt を空ファイルとして作成する","    $ touch memo.txt","","5. lessで kadai-terminal の直下の memo.txt を開く","    $ less memo.txt"],"id":31},{"start":{"row":0,"column":0},"end":{"row":23,"column":21},"action":"insert","lines":["<?php","// クラス定義","class Sample {","    // インスタンスが持つ変数（値）","    public $value1 = '';","    public $value2 = 123;","    public $value3 = true;","    ","    // インスタンスを初期化するための、特別な関数","    function __construct($value1) {","        $this->value1 = $value1;","    }","    ","    // インスタンスが持つ関数（処理）","    function test($name) {","        print $this->value1 . '、' . $name . 'さん！' . PHP_EOL;","    }","}","","// インスタンスの生成と、変数への代入","$sample1 = new Sample('こんにちは');","","// インスタンスの使用","$sample1->test('太郎');"]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":32}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":34}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1602589013085}